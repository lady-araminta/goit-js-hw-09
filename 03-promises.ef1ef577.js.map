{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SACjCC,EAAWF,SAASC,cAAc,uBAClCE,EAAUH,SAASC,cAAc,sBACjCG,EAAYJ,SAASC,cAAc,wBA2BzC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,MAlCPR,EAAQgB,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAMC,iBACN,MAAMC,EAAQhB,EAASiB,MACjBC,EAAOjB,EAAQgB,MACfE,EAASjB,EAAUe,MACzBG,QAAQC,IAAI,SAAUL,EAAO,QAASE,EAAM,UAAWC,GACvD,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAQG,GAAK,EAAG,CAClC,MAAMC,EAAWC,OAAOF,GAAK,EACvBG,EAAeD,OAAOR,GAASE,EAAO,CAACI,GAC7CnB,EAAcoB,EAAUE,GACrBC,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAAhC,GAASiC,OAAOC,QACd,uBAAqBzB,QAAiBC,UAGzCyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAAhC,GAASiC,OAAOG,QACd,sBAAoB3B,QAAeC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\nconst delayRef = document.querySelector('input[name=\"delay\"]');\nconst stepRef = document.querySelector('input[name=\"step\"]');\nconst amountRef = document.querySelector('input[name=\"amount\"]');\n\nformRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const delay = delayRef.value;\n  const step = stepRef.value;\n  const amount = amountRef.value;\n  console.log('delay:', delay, 'step:', step, 'amount:', amount);\n  for (let i = 0; i < amount; i += 1) {\n    const position = Number(i) + 1;\n    const currentDelay = Number(delay) + step * [i];\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$delayRef","$47d4ff9957288465$var$stepRef","$47d4ff9957288465$var$amountRef","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","value","step","amount","console","log","i","position1","Number","currentDelay","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.ef1ef577.js.map"}